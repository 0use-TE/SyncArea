@page "/login"
@using Microsoft.AspNetCore.WebUtilities
@using SyncArea.Identity.Models
@inject NavigationManager Navigation
@inject ISnackbar Snackbar
<div class="d-flex flex-column align-center justify-center gap-2" style="height:80vh">
    <MudContainer MaxWidth="MaxWidth.Small">
        <EditForm Model="@Model" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <MudCard Outlined >
                <MudCardHeader>
                    <MudText Typo="Typo.h5">登录页面</MudText>
                </MudCardHeader>
                <MudCardContent>
                    <MudTextField Variant="Variant.Outlined" Label="用户名" @bind-Value="Model.Username" For="@(() => Model.Username)" />
                    <MudTextField Variant="Variant.Outlined" Label="密码" @bind-Value="Model.Password" InputType="InputType.Password" For="@(() => Model.Password)" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton  ButtonType="ButtonType.Submit" Variant="Variant.Outlined" Color="Color.Primary" Class="ml-auto">登录</MudButton>
                </MudCardActions>
            </MudCard>
        </EditForm>
    </MudContainer>
</div>

@code {
    private LoginModel Model { get; set; } = new();

    public class LoginModel
    {
        [Required]
        public string Username { get; set; } = string.Empty;
        [Required]
        [DataType(DataType.Password)]
        public string Password { get; set; } = string.Empty;
    }

    private  Task HandleLogin()
    {
        var parameters = new Dictionary<string, string?>
            {
                ["username"] = Model.Username,
                ["password"] = Model.Password
            };

        var url = QueryHelpers.AddQueryString("/account/login", parameters);
        Navigation.NavigateTo(url,true);
        return Task.CompletedTask;
    }
}