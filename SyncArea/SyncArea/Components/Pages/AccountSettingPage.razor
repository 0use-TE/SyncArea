@page "/AccountSettingPage"
@inject UserCRUDService UserCRUDService
@inject ISnackbar SnackBar
@attribute [Authorize]
@inject NavigationManager NavigationManager
<div class="d-flex flex-column align-center">
    <MudContainer MaxWidth="MaxWidth.Medium">
        <MudCard>
            <MudCardHeader>
                <MudText Align="Align.Left" Typo="Typo.h5" Color="Color.Primary">个人资料</MudText>
            </MudCardHeader>
            <MudCardContent>
                <MudText>姓名: @UserCRUDService?.CurrentUser?.Name</MudText>
                <MudText>账号：@UserCRUDService?.CurrentUser?.UserName</MudText>
            </MudCardContent>
            <MudCardActions>
                <div class="d-flex flex-column " style="width:100%">
                    <div class="d-flex">
                        <MudButton Class="ml-auto" Variant="Variant.Outlined" Color="Color.Primary" OnClick="@(()=>popChangePassword=!popChangePassword)">设置新密码</MudButton>
                        <MudPopover Open=popChangePassword Fixed Class="pa-4 d-flex flex-column gap-2" AnchorOrigin="Origin.TopRight" TransformOrigin="Origin.BottomRight">
                            <MudIconButton Icon="@Icons.Material.Rounded.Close" OnClick="@(()=>popChangePassword=!popChangePassword)" Class="ml-auto" Color="Color.Secondary"></MudIconButton>
                            <MudTextField Placeholder="输入新密码" Variant="Variant.Outlined" @bind-Value=password></MudTextField>
                            <MudButton Class="ml-auto" Variant="Variant.Outlined" Color="Color.Primary" OnClick="ChangePassword">保存</MudButton>
                        </MudPopover>
                    </div>
                    <br />
                    <MudButton Class="ml-auto" Color="Color.Primary" Variant="Variant.Outlined" OnClick="@(()=>popUserData=!popUserData)">修改</MudButton>
                    <MudButton Class="ml-auto" Color="Color.Error" Href="" Variant="Variant.Outlined" OnClick="@(()=>NavigationManager.NavigateTo("/account/logout",true))">登出</MudButton>
    
                </div>

            </MudCardActions>
        </MudCard>
        <MudPopover Open=popUserData Fixed Class="pa-4 d-flex flex-column " AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight" >
            <MudIconButton Icon="@Icons.Material.Rounded.Close" OnClick="@(()=>popUserData=!popUserData)" Class="ml-auto" Color="Color.Secondary"></MudIconButton>
            <MudTextField Placeholder="输入新的姓名" Variant="Variant.Outlined" @bind-Value=name ></MudTextField>
        <MudButton Class="ml-auto" Variant="Variant.Outlined" Color="Color.Primary" OnClick="ChangeUserData">保存</MudButton>
        </MudPopover>

    </MudContainer>
</div>
@code {
    private bool popUserData;
    private bool popChangePassword;
    private string? password;
    private string? name;
    protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();
    }
    private async Task ChangePassword()
    {
        try{
            if(string.IsNullOrWhiteSpace(password))
            {
                SnackBar.Add("密码不能为空!", Severity.Warning);
                return;
            }
            var result= await UserCRUDService.ChangePassword(password);
            if (result)
                SnackBar.Add("密码修改成功!", Severity.Success);
                else
                SnackBar.Add("密码修改失败!", Severity.Error);
        }
        catch
        {
            SnackBar.Add("密码修改失败!", Severity.Error);
        }
    }
    private async Task ChangeUserData()
    {
        try
        {
            UserCRUDService!.CurrentUser!.Name = name;
            await UserCRUDService.SaveAsync();
        }
        catch
        {
            
        }
    }
}
