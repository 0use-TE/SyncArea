@using Microsoft.AspNetCore.Components.Web.Virtualization
@using MudBlazor
@using SyncArea.Components.Pages.Admin
@using SyncArea.Services
@inject IDialogService DialogService
@inject IJSRuntime JSRuntime

<div id="container" style="max-height:80vh;overflow:auto">
    <MudXOutline ScrollContainerSelector="#container">
        @if (GroupedWorkItems != null)
        {
            foreach (var group in GroupedWorkItems)
            {
                var date = group.Key.Date.ToString("yyyy-MM-dd");
                <MudXOutlineSection Title="@date">
                    <MudExpansionPanels Outlined Gutters="false">
                        <MudExpansionPanel Text="@date" HeaderClass="pa-2" Gutters="false">
                            <MudPaper Outlined Class="pa-2">
                                @foreach (var item in group)
                                {
                                    <div @key="item">
                                        <MudText>创建者: @item.Username</MudText>
                                        <MudText>备注: @(item.Remark ?? "无")</MudText>
                                        <MudText>图片数: @item.PhotoCount</MudText>
                                        @if (item.PhotoUrls.Any())
                                        {
                                            <MudGrid Class="mt-2">
                                                @foreach (var photoUrl in item.PhotoUrls)
                                                {
                                                    <MudItem xs="6" sm="4" md="3" @key="photoUrl">
                                                        <MudButton OnClick="@(() => LookImage(photoUrl))">
                                                            <MudImage Src="./loading.svg"
                                                                      data-src="@photoUrl"
                                                                      Alt="照片"
                                                                      Fluid
                                                                      ObjectFit="ObjectFit.Cover"
                                                                      ObjectPosition="ObjectPosition.Center"
                                                                      Style="aspect-ratio:1"
                                                                      Class="lazy-image" />
                                                        </MudButton>
                                                    </MudItem>
                                                }
                                            </MudGrid>
                                        }
                                        else
                                        {
                                            <MudText Color="Color.Info">无照片</MudText>
                                        }
                                        <br />
                                        <MudDivider />
                                    </div>
                                }
                            </MudPaper>
                        </MudExpansionPanel>
                    </MudExpansionPanels>
                    <br />
                </MudXOutlineSection>
            }
        }
    </MudXOutline>
</div>

@code {
    [Parameter]
    public IEnumerable<IGrouping<DateTime, WorkItemDto>>? GroupedWorkItems { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("initLazyLoad");
        }
    }

    private async Task LookImage(string url)
    {
        var options = new DialogOptions
            {
                CloseButton = false,
                MaxWidth = MaxWidth.ExtraLarge,
                NoHeader = true,
                BackdropClick = true
            };
        var parameters = new DialogParameters<LookImage>
        {
            { "Url", url }
        };
        await DialogService.ShowAsync<LookImage>("查看图片", parameters, options);
    }
}