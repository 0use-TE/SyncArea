@page "/workspace/{WorkspaceId:guid}"
@using Microsoft.AspNetCore.Authorization
@using SyncArea.Identity.Models
@using SyncArea.Misc
@using SyncArea.Services
@attribute [Authorize]
@inject WorkItemService WorkItemService
@inject WorkspaceService WorkspaceService
@inject IDialogService DialogService
@inject NavigationManager Navigation

<MudCard Elevation="0" >
    <MudCardHeader>
        <MudText Typo="Typo.h5" Color="Color.Primary">工作区名称: @Workspace?.Name</MudText>
        <MudSpacer />
        <MudButton Variant="Variant.Outlined" Color="Color.Primary" OnClick="ShowCreateWorkItemDialog">添加工作项</MudButton>
    </MudCardHeader>
    <MudCardContent>
        @if (IsLoading)
        {
        <MudProgressCircular Indeterminate="true" Color="Color.Primary" />
        }
        else if (GroupedWorkItems.Any())
        {
        <div  id="container" style="max-height:80vh;overflow:auto">
            <MudXOutline ScrollContainerSelector="#container">
                @foreach (var group in GroupedWorkItems)
                {
                        var date = group.Key.Date.ToString("yyyy-MM-dd");
                <MudXOutlineSection Title="@date">
                       <MudExpansionPanels>
                                <MudExpansionPanel Text="@date">
                                    <MudPaper Outlined Class="pa-4">

                             @foreach (var item in group)
                            {
                                    <MudText>创建者: @item.Username</MudText>
                                    <MudText>备注: @(item.Remark ?? "无")</MudText>
                                    <MudText>图片数: @item.PhotoCount</MudText>
                                    @if (item.PhotoPreviews.Any())
                                    {
                                        <MudGrid Class="mt-2">
                                            @foreach (var preview in item.PhotoPreviews)
                                            {
                                                <MudItem xs="6" sm="4">
                                                    <MudImage Src="@($"data:image/jpeg;base64,{preview}")" Alt="照片" Width="100" Height="100" ObjectFit="ObjectFit.Cover" />
                                                </MudItem>
                                            }
                                        </MudGrid>
                                    }
                                    else
                                    {
                                        <MudText Color="Color.Info">无照片</MudText>
                                    }
                                    <MudDivider></MudDivider>
                            }
                                    </MudPaper>
                                </MudExpansionPanel>
                       </MudExpansionPanels>
                    </MudXOutlineSection>


                }
                </MudXOutline>

            </div>
        }
        else
        {
            <MudText>暂无工作项</MudText>
        }
    </MudCardContent>
</MudCard>

@code {
    [Parameter] public Guid WorkspaceId { get; set; }
    private WorkspaceDto? Workspace { get; set; }
    private List<WorkItemDto> WorkItems { get; set; } = new();
    private IEnumerable<IGrouping<DateTime, WorkItemDto>> GroupedWorkItems => WorkItems.GroupBy(wi => wi.Date.Date);
    private bool IsLoading { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {
        Workspace = (await WorkspaceService.GetWorkspacesAsync()).FirstOrDefault(w => w.Id == WorkspaceId);
        if (Workspace == null)
        {
            Navigation.NavigateTo("/workspaces");
            return;
        }
        WorkItems = await WorkItemService.GetWorkItemsByWorkspaceAsync(WorkspaceId);
        IsLoading = false;
    }

    private async Task ShowCreateWorkItemDialog()
    {
        var parameters = new DialogParameters
        {
            { "WorkspaceId", WorkspaceId },
            { "OnWorkItemCreated", EventCallback.Factory.Create(this, async () =>
            {
                IsLoading = true;
                await OnInitializedAsync();
                IsLoading = false;
            }) }
        };
        await DialogService.ShowAsync<CreateWorkItemDialog>("添加工作项", parameters, AppliationSettings.DialogOptions);
    }
}