@using SyncArea.Services
@inject ShareService ShareService
@inject WorkspaceService WorkspaceService
@inject ISnackbar Snackbar
@inherits MudComponentBase
<MudCard Outlined Class="pa-4 ma-4">
    <MudCardHeader>
        <MudText Typo="Typo.h6">创建分享链接</MudText>
    </MudCardHeader>
    <MudCardContent>
        <EditForm Model="@Model" OnValidSubmit="HandleCreateShare">
            <DataAnnotationsValidator />
            <MudSelect T="Guid" Label="工作区" Variant="Variant.Outlined" @bind-Value="Model.WorkspaceId" For="@(() => Model.WorkspaceId)">
                @foreach (var workspace in Workspaces)
                {
                    <MudSelectItem Value="@workspace.Id">@workspace.Name</MudSelectItem>
                }
            </MudSelect>
            <MudDatePicker Label="过期日期" Variant="Variant.Outlined" @bind-Date="Model.ExpiryDate" For="@(() => Model.ExpiryDate)" MinDate="@DateTime.Today.AddDays(1)" />
            @if (!string.IsNullOrEmpty(ErrorMessage))
            {
                <MudAlert Severity="Severity.Error" Class="mt-2">@ErrorMessage</MudAlert>
            }
        </EditForm>
    </MudCardContent>
    <MudCardActions>
        <MudButton Variant="Variant.Outlined" OnClick="Cancel">取消</MudButton>
        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Outlined" Color="Color.Primary" OnClick="HandleCreateShare">创建</MudButton>
    </MudCardActions>
</MudCard>
       

@code {
    [CascadingParameter] IMudDialogInstance MudDialog { get; set; } = null!;
    [Parameter] public EventCallback<string> OnShareCreated { get; set; }

    private CreateShareModel Model { get; set; } = new();
    private string ErrorMessage { get; set; } = string.Empty;
    private List<WorkspaceDto> Workspaces { get; set; } = new();

    public class CreateShareModel
    {
        [Required(ErrorMessage = "请选择工作区")]
        public Guid WorkspaceId { get; set; }
        [Required(ErrorMessage = "请选择过期日期")]
        public DateTime? ExpiryDate { get; set; }
    }

    protected override async Task OnInitializedAsync()
    {
        Workspaces = await WorkspaceService.GetWorkspacesAsync();
    }

    private async Task HandleCreateShare()
    {
        if (Model.ExpiryDate == null)
        {
            ErrorMessage = "请选择过期日期";
            return;
        }

        var success = await ShareService.CreateShareAsync(Model.WorkspaceId, Model.ExpiryDate.Value);
        if (success)
        {
            await OnShareCreated.InvokeAsync();
            MudDialog.Close(DialogResult.Ok(true));
        }
        else
        {
            ErrorMessage = "创建分享链接失败";
        }
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }
}