@using SyncArea.Services
@inject UserService UserService
@inject ISnackbar Snackbar
@inherits MudComponentBase

<MudCard Class="pa-4 ma-4" Outlined>
    <MudCardHeader>
        <MudText Typo="Typo.h6">编辑用户</MudText>
    </MudCardHeader>
    <MudCardContent>
        <EditForm Model="@Model" OnValidSubmit="HandleUpdateUser">
            <DataAnnotationsValidator />
            <MudTextField Variant="Variant.Outlined" Label="姓名" @bind-Value="Model.Name" For="@(() => Model.Name)" />
            <MudTextField Variant="Variant.Outlined" Label="账号" @bind-Value="Model.Username" For="@(() => Model.Username)" />
            <MudTextField Variant="Variant.Outlined" Label="新密码（可选）" @bind-Value="Model.Password" />
            @if (!string.IsNullOrEmpty(ErrorMessage))
            {
                <MudAlert Severity="Severity.Error" Class="mt-2">@ErrorMessage</MudAlert>
            }
        </EditForm>
    </MudCardContent>
    <MudCardActions>
        <MudButton Variant="Variant.Outlined" OnClick="Cancel">取消</MudButton>
        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Outlined" Color="Color.Primary" OnClick="HandleUpdateUser">保存</MudButton>
    </MudCardActions>
</MudCard>

@code {
    [CascadingParameter] IMudDialogInstance MudDialog { get; set; } = null!;
    [Parameter] public UserDto User { get; set; } = null!;
    [Parameter] public EventCallback<string> OnUserUpdated { get; set; }

    private EditUserModel Model { get; set; } = new();
    private string ErrorMessage { get; set; } = string.Empty;

    public class EditUserModel
    {
        [Required(ErrorMessage = "请输入账号")]
        public string Username { get; set; } = string.Empty;
        public string? Password { get; set; }
        public string?Name{ get; set; }
    }

    protected override void OnInitialized()
    {
        Model.Username = User.Username;
        Model.Name = User.Name;
    }

    private async Task HandleUpdateUser()
    {
        var success = await UserService.UpdateUserAsync(User.Id, Model.Username, Model.Password);
        if (success)
        {
            await OnUserUpdated.InvokeAsync();
            MudDialog.Close(DialogResult.Ok(true));
        }
        else
        {
            ErrorMessage = "更新用户信息失败";
        }
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }
}